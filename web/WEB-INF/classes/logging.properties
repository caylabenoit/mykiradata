# Copyright (C) 2017 Benoit CAYLA (benoit@famillecayla.fr)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# https://tomcat.apache.org/tomcat-8.0-doc/logging.html

# Global logging properties.
# ------------------------------------------
# The set of handlers to be loaded upon startup.
# Comma-separated list of class names.
# (? LogManager docs say no comma here, but JDK example has comma.)


# Handlers
# -----------------------------------------
handlers=org.apache.juli.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# Loggers and Handlers may override this level
.level=INFO

# Loggers
# ------------------------------------------
# Loggers are usually attached to packages.
# Here, the level for each package is specified.
# The global level is used by default, so levels
# specified here simply act as an override.
com.joy.api.level=ALL

# where the arguments are:
#   1  format - the java.util.Formatter format string specified in the java.util.logging.SimpleFormatter.format property or the default format.
#   2  date - a Date object representing event time of the log record.
#   3  source - a string representing the caller, if available; otherwise, the logger's name.
#   4  logger - the logger's name.
#   5  level - the log level.
#   6  message - the formatted log message returned from the Formatter.formatMessage(LogRecord) method. It uses java.text formatting and does not use the java.util.Formatter format argument.
#   7  thrown - a string representing the throwable associated with the log record and its backtrace beginning with a newline character, if any; otherwise, an empty string.
org.apache.juli.OneLineFormatter.format="%4$s: %5$s [%1$tc]%n"

# --- ConsoleHandler ---
# Override of global logging level WARNING
java.util.logging.ConsoleHandler.level=WARNING
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# --- FileHandler ---
# Override of global logging level
org.apache.juli.FileHandler.level=FINE
org.apache.juli.FileHandler.directory=/home/benoit/logs
org.apache.juli.FileHandler.prefix = dgm.
org.apache.juli.FileHandler.bufferSize = 16384
org.apache.juli.FileHandler.formatter=org.apache.juli.OneLineFormatter